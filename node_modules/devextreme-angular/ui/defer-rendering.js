"use strict";
/*!
 * devextreme-angular
 * Version: 17.1.5
 * Build date: Wed Aug 02 2017
 *
 * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var defer_rendering_1 = require("devextreme/ui/defer_rendering");
var component_1 = require("../core/component");
var template_host_1 = require("../core/template-host");
var template_1 = require("../core/template");
var nested_option_1 = require("../core/nested-option");
var watcher_helper_1 = require("../core/watcher-helper");
var animation_1 = require("./nested/animation");
var DxDeferRenderingComponent = (function (_super) {
    __extends(DxDeferRenderingComponent, _super);
    function DxDeferRenderingComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost) {
        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper) || this;
        _this._createEventEmitters([
            { subscribe: 'rendered', emit: 'onRendered' },
            { subscribe: 'shown', emit: 'onShown' },
            { emit: 'animationChange' },
            { emit: 'renderWhenChange' },
            { emit: 'showLoadIndicatorChange' },
            { emit: 'staggerItemSelectorChange' }
        ]);
        optionHost.setHost(_this);
        return _this;
    }
    Object.defineProperty(DxDeferRenderingComponent.prototype, "animation", {
        get: function () {
            return this._getOption('animation');
        },
        set: function (value) {
            this._setOption('animation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDeferRenderingComponent.prototype, "renderWhen", {
        get: function () {
            return this._getOption('renderWhen');
        },
        set: function (value) {
            this._setOption('renderWhen', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDeferRenderingComponent.prototype, "showLoadIndicator", {
        get: function () {
            return this._getOption('showLoadIndicator');
        },
        set: function (value) {
            this._setOption('showLoadIndicator', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDeferRenderingComponent.prototype, "staggerItemSelector", {
        get: function () {
            return this._getOption('staggerItemSelector');
        },
        set: function (value) {
            this._setOption('staggerItemSelector', value);
        },
        enumerable: true,
        configurable: true
    });
    DxDeferRenderingComponent.prototype._createInstance = function (element, options) {
        return new defer_rendering_1.default(element, options);
    };
    DxDeferRenderingComponent.prototype.ngOnDestroy = function () {
        this._destroyWidget();
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDeferRenderingComponent.prototype, "animation", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDeferRenderingComponent.prototype, "renderWhen", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDeferRenderingComponent.prototype, "showLoadIndicator", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDeferRenderingComponent.prototype, "staggerItemSelector", null);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDeferRenderingComponent.prototype, "onRendered", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDeferRenderingComponent.prototype, "onShown", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDeferRenderingComponent.prototype, "animationChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDeferRenderingComponent.prototype, "renderWhenChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDeferRenderingComponent.prototype, "showLoadIndicatorChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDeferRenderingComponent.prototype, "staggerItemSelectorChange", void 0);
    DxDeferRenderingComponent = __decorate([
        core_1.Component({
            selector: 'dx-defer-rendering',
            template: '',
            providers: [
                template_host_1.DxTemplateHost,
                watcher_helper_1.WatcherHelper,
                nested_option_1.NestedOptionHost
            ]
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, core_1.NgZone, template_host_1.DxTemplateHost,
            watcher_helper_1.WatcherHelper, nested_option_1.NestedOptionHost])
    ], DxDeferRenderingComponent);
    return DxDeferRenderingComponent;
}(component_1.DxComponent));
exports.DxDeferRenderingComponent = DxDeferRenderingComponent;
var DxDeferRenderingModule = (function () {
    function DxDeferRenderingModule() {
    }
    DxDeferRenderingModule = __decorate([
        core_1.NgModule({
            imports: [
                animation_1.DxoAnimationModule,
                template_1.DxTemplateModule
            ],
            declarations: [
                DxDeferRenderingComponent
            ],
            exports: [
                DxDeferRenderingComponent,
                animation_1.DxoAnimationModule,
                template_1.DxTemplateModule
            ],
        })
    ], DxDeferRenderingModule);
    return DxDeferRenderingModule;
}());
exports.DxDeferRenderingModule = DxDeferRenderingModule;
//# sourceMappingURL=defer-rendering.js.map