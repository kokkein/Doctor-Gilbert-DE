"use strict";
/*!
 * devextreme-angular
 * Version: 17.1.5
 * Build date: Wed Aug 02 2017
 *
 * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var data_grid_1 = require("devextreme/ui/data_grid");
var component_1 = require("../core/component");
var template_host_1 = require("../core/template-host");
var template_1 = require("../core/template");
var nested_option_1 = require("../core/nested-option");
var watcher_helper_1 = require("../core/watcher-helper");
var iterable_differ_helper_1 = require("../core/iterable-differ-helper");
var column_chooser_1 = require("./nested/column-chooser");
var column_fixing_1 = require("./nested/column-fixing");
var texts_1 = require("./nested/texts");
var column_dxi_1 = require("./nested/column-dxi");
var header_filter_1 = require("./nested/header-filter");
var lookup_1 = require("./nested/lookup");
var format_1 = require("./nested/format");
var form_item_1 = require("./nested/form-item");
var label_1 = require("./nested/label");
var validation_rule_dxi_1 = require("./nested/validation-rule-dxi");
var editing_1 = require("./nested/editing");
var form_1 = require("./nested/form");
var col_count_by_screen_1 = require("./nested/col-count-by-screen");
var item_dxi_1 = require("./nested/item-dxi");
var tab_panel_options_1 = require("./nested/tab-panel-options");
var tab_dxi_1 = require("./nested/tab-dxi");
var popup_1 = require("./nested/popup");
var animation_1 = require("./nested/animation");
var hide_1 = require("./nested/hide");
var show_1 = require("./nested/show");
var position_1 = require("./nested/position");
var at_1 = require("./nested/at");
var boundary_offset_1 = require("./nested/boundary-offset");
var collision_1 = require("./nested/collision");
var my_1 = require("./nested/my");
var offset_1 = require("./nested/offset");
var toolbar_item_dxi_1 = require("./nested/toolbar-item-dxi");
var export_1 = require("./nested/export");
var filter_row_1 = require("./nested/filter-row");
var operation_descriptions_1 = require("./nested/operation-descriptions");
var grouping_1 = require("./nested/grouping");
var group_panel_1 = require("./nested/group-panel");
var load_panel_1 = require("./nested/load-panel");
var master_detail_1 = require("./nested/master-detail");
var pager_1 = require("./nested/pager");
var paging_1 = require("./nested/paging");
var remote_operations_1 = require("./nested/remote-operations");
var scrolling_1 = require("./nested/scrolling");
var search_panel_1 = require("./nested/search-panel");
var selection_1 = require("./nested/selection");
var sort_by_group_summary_info_dxi_1 = require("./nested/sort-by-group-summary-info-dxi");
var sorting_1 = require("./nested/sorting");
var state_storing_1 = require("./nested/state-storing");
var summary_1 = require("./nested/summary");
var group_item_dxi_1 = require("./nested/group-item-dxi");
var value_format_1 = require("./nested/value-format");
var total_item_dxi_1 = require("./nested/total-item-dxi");
var column_dxi_2 = require("./nested/column-dxi");
var sort_by_group_summary_info_dxi_2 = require("./nested/sort-by-group-summary-info-dxi");
var DxDataGridComponent = (function (_super) {
    __extends(DxDataGridComponent, _super);
    function DxDataGridComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost) {
        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper) || this;
        _this._watcherHelper = _watcherHelper;
        _this._idh = _idh;
        _this._createEventEmitters([
            { subscribe: 'adaptiveDetailRowPreparing', emit: 'onAdaptiveDetailRowPreparing' },
            { subscribe: 'cellClick', emit: 'onCellClick' },
            { subscribe: 'cellHoverChanged', emit: 'onCellHoverChanged' },
            { subscribe: 'cellPrepared', emit: 'onCellPrepared' },
            { subscribe: 'contentReady', emit: 'onContentReady' },
            { subscribe: 'contextMenuPreparing', emit: 'onContextMenuPreparing' },
            { subscribe: 'dataErrorOccurred', emit: 'onDataErrorOccurred' },
            { subscribe: 'disposing', emit: 'onDisposing' },
            { subscribe: 'editingStart', emit: 'onEditingStart' },
            { subscribe: 'editorPrepared', emit: 'onEditorPrepared' },
            { subscribe: 'editorPreparing', emit: 'onEditorPreparing' },
            { subscribe: 'exported', emit: 'onExported' },
            { subscribe: 'exporting', emit: 'onExporting' },
            { subscribe: 'fileSaving', emit: 'onFileSaving' },
            { subscribe: 'initialized', emit: 'onInitialized' },
            { subscribe: 'initNewRow', emit: 'onInitNewRow' },
            { subscribe: 'keyDown', emit: 'onKeyDown' },
            { subscribe: 'optionChanged', emit: 'onOptionChanged' },
            { subscribe: 'rowClick', emit: 'onRowClick' },
            { subscribe: 'rowCollapsed', emit: 'onRowCollapsed' },
            { subscribe: 'rowCollapsing', emit: 'onRowCollapsing' },
            { subscribe: 'rowExpanded', emit: 'onRowExpanded' },
            { subscribe: 'rowExpanding', emit: 'onRowExpanding' },
            { subscribe: 'rowInserted', emit: 'onRowInserted' },
            { subscribe: 'rowInserting', emit: 'onRowInserting' },
            { subscribe: 'rowPrepared', emit: 'onRowPrepared' },
            { subscribe: 'rowRemoved', emit: 'onRowRemoved' },
            { subscribe: 'rowRemoving', emit: 'onRowRemoving' },
            { subscribe: 'rowUpdated', emit: 'onRowUpdated' },
            { subscribe: 'rowUpdating', emit: 'onRowUpdating' },
            { subscribe: 'rowValidating', emit: 'onRowValidating' },
            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },
            { subscribe: 'toolbarPreparing', emit: 'onToolbarPreparing' },
            { emit: 'accessKeyChange' },
            { emit: 'activeStateEnabledChange' },
            { emit: 'allowColumnReorderingChange' },
            { emit: 'allowColumnResizingChange' },
            { emit: 'cacheEnabledChange' },
            { emit: 'cellHintEnabledChange' },
            { emit: 'columnAutoWidthChange' },
            { emit: 'columnChooserChange' },
            { emit: 'columnFixingChange' },
            { emit: 'columnHidingEnabledChange' },
            { emit: 'columnMinWidthChange' },
            { emit: 'columnResizingModeChange' },
            { emit: 'columnsChange' },
            { emit: 'customizeColumnsChange' },
            { emit: 'customizeExportDataChange' },
            { emit: 'dataSourceChange' },
            { emit: 'dateSerializationFormatChange' },
            { emit: 'disabledChange' },
            { emit: 'editingChange' },
            { emit: 'elementAttrChange' },
            { emit: 'errorRowEnabledChange' },
            { emit: 'exportChange' },
            { emit: 'filterRowChange' },
            { emit: 'focusStateEnabledChange' },
            { emit: 'groupingChange' },
            { emit: 'groupPanelChange' },
            { emit: 'headerFilterChange' },
            { emit: 'heightChange' },
            { emit: 'hintChange' },
            { emit: 'hoverStateEnabledChange' },
            { emit: 'keyExprChange' },
            { emit: 'loadPanelChange' },
            { emit: 'masterDetailChange' },
            { emit: 'noDataTextChange' },
            { emit: 'pagerChange' },
            { emit: 'pagingChange' },
            { emit: 'remoteOperationsChange' },
            { emit: 'rowAlternationEnabledChange' },
            { emit: 'rowTemplateChange' },
            { emit: 'rtlEnabledChange' },
            { emit: 'scrollingChange' },
            { emit: 'searchPanelChange' },
            { emit: 'selectedRowKeysChange' },
            { emit: 'selectionChange' },
            { emit: 'selectionFilterChange' },
            { emit: 'showBordersChange' },
            { emit: 'showColumnHeadersChange' },
            { emit: 'showColumnLinesChange' },
            { emit: 'showRowLinesChange' },
            { emit: 'sortByGroupSummaryInfoChange' },
            { emit: 'sortingChange' },
            { emit: 'stateStoringChange' },
            { emit: 'summaryChange' },
            { emit: 'tabIndexChange' },
            { emit: 'twoWayBindingEnabledChange' },
            { emit: 'visibleChange' },
            { emit: 'widthChange' },
            { emit: 'wordWrapEnabledChange' }
        ]);
        _this._idh.setHost(_this);
        optionHost.setHost(_this);
        return _this;
    }
    Object.defineProperty(DxDataGridComponent.prototype, "accessKey", {
        get: function () {
            return this._getOption('accessKey');
        },
        set: function (value) {
            this._setOption('accessKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "activeStateEnabled", {
        get: function () {
            return this._getOption('activeStateEnabled');
        },
        set: function (value) {
            this._setOption('activeStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "allowColumnReordering", {
        get: function () {
            return this._getOption('allowColumnReordering');
        },
        set: function (value) {
            this._setOption('allowColumnReordering', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "allowColumnResizing", {
        get: function () {
            return this._getOption('allowColumnResizing');
        },
        set: function (value) {
            this._setOption('allowColumnResizing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "cacheEnabled", {
        get: function () {
            return this._getOption('cacheEnabled');
        },
        set: function (value) {
            this._setOption('cacheEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "cellHintEnabled", {
        get: function () {
            return this._getOption('cellHintEnabled');
        },
        set: function (value) {
            this._setOption('cellHintEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "columnAutoWidth", {
        get: function () {
            return this._getOption('columnAutoWidth');
        },
        set: function (value) {
            this._setOption('columnAutoWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "columnChooser", {
        get: function () {
            return this._getOption('columnChooser');
        },
        set: function (value) {
            this._setOption('columnChooser', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "columnFixing", {
        get: function () {
            return this._getOption('columnFixing');
        },
        set: function (value) {
            this._setOption('columnFixing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "columnHidingEnabled", {
        get: function () {
            return this._getOption('columnHidingEnabled');
        },
        set: function (value) {
            this._setOption('columnHidingEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "columnMinWidth", {
        get: function () {
            return this._getOption('columnMinWidth');
        },
        set: function (value) {
            this._setOption('columnMinWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "columnResizingMode", {
        get: function () {
            return this._getOption('columnResizingMode');
        },
        set: function (value) {
            this._setOption('columnResizingMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "columns", {
        get: function () {
            return this._getOption('columns');
        },
        set: function (value) {
            this._setOption('columns', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "customizeColumns", {
        get: function () {
            return this._getOption('customizeColumns');
        },
        set: function (value) {
            this._setOption('customizeColumns', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "customizeExportData", {
        get: function () {
            return this._getOption('customizeExportData');
        },
        set: function (value) {
            this._setOption('customizeExportData', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "dateSerializationFormat", {
        get: function () {
            return this._getOption('dateSerializationFormat');
        },
        set: function (value) {
            this._setOption('dateSerializationFormat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "editing", {
        get: function () {
            return this._getOption('editing');
        },
        set: function (value) {
            this._setOption('editing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "errorRowEnabled", {
        get: function () {
            return this._getOption('errorRowEnabled');
        },
        set: function (value) {
            this._setOption('errorRowEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "export", {
        get: function () {
            return this._getOption('export');
        },
        set: function (value) {
            this._setOption('export', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "filterRow", {
        get: function () {
            return this._getOption('filterRow');
        },
        set: function (value) {
            this._setOption('filterRow', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "focusStateEnabled", {
        get: function () {
            return this._getOption('focusStateEnabled');
        },
        set: function (value) {
            this._setOption('focusStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "grouping", {
        get: function () {
            return this._getOption('grouping');
        },
        set: function (value) {
            this._setOption('grouping', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "groupPanel", {
        get: function () {
            return this._getOption('groupPanel');
        },
        set: function (value) {
            this._setOption('groupPanel', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "headerFilter", {
        get: function () {
            return this._getOption('headerFilter');
        },
        set: function (value) {
            this._setOption('headerFilter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "hint", {
        get: function () {
            return this._getOption('hint');
        },
        set: function (value) {
            this._setOption('hint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "hoverStateEnabled", {
        get: function () {
            return this._getOption('hoverStateEnabled');
        },
        set: function (value) {
            this._setOption('hoverStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "keyExpr", {
        get: function () {
            return this._getOption('keyExpr');
        },
        set: function (value) {
            this._setOption('keyExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "loadPanel", {
        get: function () {
            return this._getOption('loadPanel');
        },
        set: function (value) {
            this._setOption('loadPanel', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "masterDetail", {
        get: function () {
            return this._getOption('masterDetail');
        },
        set: function (value) {
            this._setOption('masterDetail', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "noDataText", {
        get: function () {
            return this._getOption('noDataText');
        },
        set: function (value) {
            this._setOption('noDataText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "pager", {
        get: function () {
            return this._getOption('pager');
        },
        set: function (value) {
            this._setOption('pager', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "paging", {
        get: function () {
            return this._getOption('paging');
        },
        set: function (value) {
            this._setOption('paging', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "remoteOperations", {
        get: function () {
            return this._getOption('remoteOperations');
        },
        set: function (value) {
            this._setOption('remoteOperations', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "rowAlternationEnabled", {
        get: function () {
            return this._getOption('rowAlternationEnabled');
        },
        set: function (value) {
            this._setOption('rowAlternationEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "rowTemplate", {
        get: function () {
            return this._getOption('rowTemplate');
        },
        set: function (value) {
            this._setOption('rowTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "scrolling", {
        get: function () {
            return this._getOption('scrolling');
        },
        set: function (value) {
            this._setOption('scrolling', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "searchPanel", {
        get: function () {
            return this._getOption('searchPanel');
        },
        set: function (value) {
            this._setOption('searchPanel', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "selectedRowKeys", {
        get: function () {
            return this._getOption('selectedRowKeys');
        },
        set: function (value) {
            this._setOption('selectedRowKeys', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "selection", {
        get: function () {
            return this._getOption('selection');
        },
        set: function (value) {
            this._setOption('selection', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "selectionFilter", {
        get: function () {
            return this._getOption('selectionFilter');
        },
        set: function (value) {
            this._setOption('selectionFilter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "showBorders", {
        get: function () {
            return this._getOption('showBorders');
        },
        set: function (value) {
            this._setOption('showBorders', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "showColumnHeaders", {
        get: function () {
            return this._getOption('showColumnHeaders');
        },
        set: function (value) {
            this._setOption('showColumnHeaders', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "showColumnLines", {
        get: function () {
            return this._getOption('showColumnLines');
        },
        set: function (value) {
            this._setOption('showColumnLines', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "showRowLines", {
        get: function () {
            return this._getOption('showRowLines');
        },
        set: function (value) {
            this._setOption('showRowLines', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "sortByGroupSummaryInfo", {
        get: function () {
            return this._getOption('sortByGroupSummaryInfo');
        },
        set: function (value) {
            this._setOption('sortByGroupSummaryInfo', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "sorting", {
        get: function () {
            return this._getOption('sorting');
        },
        set: function (value) {
            this._setOption('sorting', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "stateStoring", {
        get: function () {
            return this._getOption('stateStoring');
        },
        set: function (value) {
            this._setOption('stateStoring', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "summary", {
        get: function () {
            return this._getOption('summary');
        },
        set: function (value) {
            this._setOption('summary', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "tabIndex", {
        get: function () {
            return this._getOption('tabIndex');
        },
        set: function (value) {
            this._setOption('tabIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "twoWayBindingEnabled", {
        get: function () {
            return this._getOption('twoWayBindingEnabled');
        },
        set: function (value) {
            this._setOption('twoWayBindingEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "wordWrapEnabled", {
        get: function () {
            return this._getOption('wordWrapEnabled');
        },
        set: function (value) {
            this._setOption('wordWrapEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "columnsChildren", {
        get: function () {
            return this._getOption('columns');
        },
        set: function (value) {
            this.setChildren('columns', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxDataGridComponent.prototype, "sortByGroupSummaryInfoChildren", {
        get: function () {
            return this._getOption('sortByGroupSummaryInfo');
        },
        set: function (value) {
            this.setChildren('sortByGroupSummaryInfo', value);
        },
        enumerable: true,
        configurable: true
    });
    DxDataGridComponent.prototype._createInstance = function (element, options) {
        return new data_grid_1.default(element, options);
    };
    DxDataGridComponent.prototype.ngOnDestroy = function () {
        this._destroyWidget();
    };
    DxDataGridComponent.prototype.ngOnChanges = function (changes) {
        this._idh.setup('columns', changes);
        this._idh.setup('dataSource', changes);
        this._idh.setup('keyExpr', changes);
        this._idh.setup('selectedRowKeys', changes);
        this._idh.setup('sortByGroupSummaryInfo', changes);
    };
    DxDataGridComponent.prototype.ngDoCheck = function () {
        this._idh.doCheck('columns');
        this._idh.doCheck('dataSource');
        this._idh.doCheck('keyExpr');
        this._idh.doCheck('selectedRowKeys');
        this._idh.doCheck('sortByGroupSummaryInfo');
        this._watcherHelper.checkWatchers();
    };
    DxDataGridComponent.prototype._updateOption = function (name, value) {
        if (Array.isArray(value)) {
            this._idh.setupSingle(name, value);
            this._idh.getChanges(name, value);
        }
        _super.prototype._updateOption.call(this, name, value);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "accessKey", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "activeStateEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "allowColumnReordering", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "allowColumnResizing", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "cacheEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "cellHintEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "columnAutoWidth", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "columnChooser", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "columnFixing", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "columnHidingEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "columnMinWidth", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "columnResizingMode", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "columns", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "customizeColumns", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "customizeExportData", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "dataSource", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "dateSerializationFormat", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "disabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "editing", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "elementAttr", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "errorRowEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "export", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "filterRow", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "focusStateEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "grouping", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "groupPanel", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "headerFilter", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "height", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "hint", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "hoverStateEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "keyExpr", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "loadPanel", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "masterDetail", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "noDataText", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "pager", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "paging", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "remoteOperations", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "rowAlternationEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "rowTemplate", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "rtlEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "scrolling", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "searchPanel", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "selectedRowKeys", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "selection", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "selectionFilter", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "showBorders", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "showColumnHeaders", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "showColumnLines", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "showRowLines", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "sortByGroupSummaryInfo", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "sorting", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "stateStoring", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "summary", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "tabIndex", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "twoWayBindingEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "visible", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "width", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "wordWrapEnabled", null);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onAdaptiveDetailRowPreparing", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onCellClick", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onCellHoverChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onCellPrepared", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onContentReady", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onContextMenuPreparing", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onDataErrorOccurred", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onDisposing", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onEditingStart", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onEditorPrepared", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onEditorPreparing", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onExported", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onExporting", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onFileSaving", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onInitialized", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onInitNewRow", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onKeyDown", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onOptionChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowClick", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowCollapsed", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowCollapsing", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowExpanded", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowExpanding", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowInserted", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowInserting", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowPrepared", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowRemoved", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowRemoving", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowUpdated", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowUpdating", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onRowValidating", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onSelectionChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "onToolbarPreparing", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "accessKeyChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "activeStateEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "allowColumnReorderingChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "allowColumnResizingChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "cacheEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "cellHintEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "columnAutoWidthChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "columnChooserChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "columnFixingChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "columnHidingEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "columnMinWidthChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "columnResizingModeChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "columnsChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "customizeColumnsChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "customizeExportDataChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "dataSourceChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "dateSerializationFormatChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "disabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "editingChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "elementAttrChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "errorRowEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "exportChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "filterRowChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "focusStateEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "groupingChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "groupPanelChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "headerFilterChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "heightChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "hintChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "hoverStateEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "keyExprChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "loadPanelChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "masterDetailChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "noDataTextChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "pagerChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "pagingChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "remoteOperationsChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "rowAlternationEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "rowTemplateChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "rtlEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "scrollingChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "searchPanelChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "selectedRowKeysChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "selectionChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "selectionFilterChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "showBordersChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "showColumnHeadersChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "showColumnLinesChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "showRowLinesChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "sortByGroupSummaryInfoChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "sortingChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "stateStoringChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "summaryChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "tabIndexChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "twoWayBindingEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "visibleChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "widthChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxDataGridComponent.prototype, "wordWrapEnabledChange", void 0);
    __decorate([
        core_1.ContentChildren(column_dxi_2.DxiColumnComponent),
        __metadata("design:type", core_1.QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "columnsChildren", null);
    __decorate([
        core_1.ContentChildren(sort_by_group_summary_info_dxi_2.DxiSortByGroupSummaryInfoComponent),
        __metadata("design:type", core_1.QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxDataGridComponent.prototype, "sortByGroupSummaryInfoChildren", null);
    DxDataGridComponent = __decorate([
        core_1.Component({
            selector: 'dx-data-grid',
            template: '',
            providers: [
                template_host_1.DxTemplateHost,
                watcher_helper_1.WatcherHelper,
                nested_option_1.NestedOptionHost,
                iterable_differ_helper_1.IterableDifferHelper
            ]
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, core_1.NgZone, template_host_1.DxTemplateHost,
            watcher_helper_1.WatcherHelper,
            iterable_differ_helper_1.IterableDifferHelper, nested_option_1.NestedOptionHost])
    ], DxDataGridComponent);
    return DxDataGridComponent;
}(component_1.DxComponent));
exports.DxDataGridComponent = DxDataGridComponent;
var DxDataGridModule = (function () {
    function DxDataGridModule() {
    }
    DxDataGridModule = __decorate([
        core_1.NgModule({
            imports: [
                column_chooser_1.DxoColumnChooserModule,
                column_fixing_1.DxoColumnFixingModule,
                texts_1.DxoTextsModule,
                column_dxi_1.DxiColumnModule,
                header_filter_1.DxoHeaderFilterModule,
                lookup_1.DxoLookupModule,
                format_1.DxoFormatModule,
                form_item_1.DxoFormItemModule,
                label_1.DxoLabelModule,
                validation_rule_dxi_1.DxiValidationRuleModule,
                editing_1.DxoEditingModule,
                form_1.DxoFormModule,
                col_count_by_screen_1.DxoColCountByScreenModule,
                item_dxi_1.DxiItemModule,
                tab_panel_options_1.DxoTabPanelOptionsModule,
                tab_dxi_1.DxiTabModule,
                popup_1.DxoPopupModule,
                animation_1.DxoAnimationModule,
                hide_1.DxoHideModule,
                show_1.DxoShowModule,
                position_1.DxoPositionModule,
                at_1.DxoAtModule,
                boundary_offset_1.DxoBoundaryOffsetModule,
                collision_1.DxoCollisionModule,
                my_1.DxoMyModule,
                offset_1.DxoOffsetModule,
                toolbar_item_dxi_1.DxiToolbarItemModule,
                export_1.DxoExportModule,
                filter_row_1.DxoFilterRowModule,
                operation_descriptions_1.DxoOperationDescriptionsModule,
                grouping_1.DxoGroupingModule,
                group_panel_1.DxoGroupPanelModule,
                load_panel_1.DxoLoadPanelModule,
                master_detail_1.DxoMasterDetailModule,
                pager_1.DxoPagerModule,
                paging_1.DxoPagingModule,
                remote_operations_1.DxoRemoteOperationsModule,
                scrolling_1.DxoScrollingModule,
                search_panel_1.DxoSearchPanelModule,
                selection_1.DxoSelectionModule,
                sort_by_group_summary_info_dxi_1.DxiSortByGroupSummaryInfoModule,
                sorting_1.DxoSortingModule,
                state_storing_1.DxoStateStoringModule,
                summary_1.DxoSummaryModule,
                group_item_dxi_1.DxiGroupItemModule,
                value_format_1.DxoValueFormatModule,
                total_item_dxi_1.DxiTotalItemModule,
                template_1.DxTemplateModule
            ],
            declarations: [
                DxDataGridComponent
            ],
            exports: [
                DxDataGridComponent,
                column_chooser_1.DxoColumnChooserModule,
                column_fixing_1.DxoColumnFixingModule,
                texts_1.DxoTextsModule,
                column_dxi_1.DxiColumnModule,
                header_filter_1.DxoHeaderFilterModule,
                lookup_1.DxoLookupModule,
                format_1.DxoFormatModule,
                form_item_1.DxoFormItemModule,
                label_1.DxoLabelModule,
                validation_rule_dxi_1.DxiValidationRuleModule,
                editing_1.DxoEditingModule,
                form_1.DxoFormModule,
                col_count_by_screen_1.DxoColCountByScreenModule,
                item_dxi_1.DxiItemModule,
                tab_panel_options_1.DxoTabPanelOptionsModule,
                tab_dxi_1.DxiTabModule,
                popup_1.DxoPopupModule,
                animation_1.DxoAnimationModule,
                hide_1.DxoHideModule,
                show_1.DxoShowModule,
                position_1.DxoPositionModule,
                at_1.DxoAtModule,
                boundary_offset_1.DxoBoundaryOffsetModule,
                collision_1.DxoCollisionModule,
                my_1.DxoMyModule,
                offset_1.DxoOffsetModule,
                toolbar_item_dxi_1.DxiToolbarItemModule,
                export_1.DxoExportModule,
                filter_row_1.DxoFilterRowModule,
                operation_descriptions_1.DxoOperationDescriptionsModule,
                grouping_1.DxoGroupingModule,
                group_panel_1.DxoGroupPanelModule,
                load_panel_1.DxoLoadPanelModule,
                master_detail_1.DxoMasterDetailModule,
                pager_1.DxoPagerModule,
                paging_1.DxoPagingModule,
                remote_operations_1.DxoRemoteOperationsModule,
                scrolling_1.DxoScrollingModule,
                search_panel_1.DxoSearchPanelModule,
                selection_1.DxoSelectionModule,
                sort_by_group_summary_info_dxi_1.DxiSortByGroupSummaryInfoModule,
                sorting_1.DxoSortingModule,
                state_storing_1.DxoStateStoringModule,
                summary_1.DxoSummaryModule,
                group_item_dxi_1.DxiGroupItemModule,
                value_format_1.DxoValueFormatModule,
                total_item_dxi_1.DxiTotalItemModule,
                template_1.DxTemplateModule
            ],
        })
    ], DxDataGridModule);
    return DxDataGridModule;
}());
exports.DxDataGridModule = DxDataGridModule;
//# sourceMappingURL=data-grid.js.map