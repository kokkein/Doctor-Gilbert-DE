"use strict";
/*!
 * devextreme-angular
 * Version: 17.1.5
 * Build date: Wed Aug 02 2017
 *
 * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var bullet_1 = require("devextreme/viz/bullet");
var component_1 = require("../core/component");
var template_host_1 = require("../core/template-host");
var template_1 = require("../core/template");
var nested_option_1 = require("../core/nested-option");
var watcher_helper_1 = require("../core/watcher-helper");
var margin_1 = require("./nested/margin");
var size_1 = require("./nested/size");
var tooltip_1 = require("./nested/tooltip");
var border_1 = require("./nested/border");
var font_1 = require("./nested/font");
var format_1 = require("./nested/format");
var shadow_1 = require("./nested/shadow");
var DxBulletComponent = (function (_super) {
    __extends(DxBulletComponent, _super);
    function DxBulletComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost) {
        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper) || this;
        _this._createEventEmitters([
            { subscribe: 'disposing', emit: 'onDisposing' },
            { subscribe: 'drawn', emit: 'onDrawn' },
            { subscribe: 'exported', emit: 'onExported' },
            { subscribe: 'exporting', emit: 'onExporting' },
            { subscribe: 'fileSaving', emit: 'onFileSaving' },
            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },
            { subscribe: 'initialized', emit: 'onInitialized' },
            { subscribe: 'optionChanged', emit: 'onOptionChanged' },
            { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },
            { subscribe: 'tooltipShown', emit: 'onTooltipShown' },
            { emit: 'colorChange' },
            { emit: 'elementAttrChange' },
            { emit: 'endScaleValueChange' },
            { emit: 'marginChange' },
            { emit: 'pathModifiedChange' },
            { emit: 'rtlEnabledChange' },
            { emit: 'showTargetChange' },
            { emit: 'showZeroLevelChange' },
            { emit: 'sizeChange' },
            { emit: 'startScaleValueChange' },
            { emit: 'targetChange' },
            { emit: 'targetColorChange' },
            { emit: 'targetWidthChange' },
            { emit: 'themeChange' },
            { emit: 'tooltipChange' },
            { emit: 'valueChange' }
        ]);
        optionHost.setHost(_this);
        return _this;
    }
    Object.defineProperty(DxBulletComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "endScaleValue", {
        get: function () {
            return this._getOption('endScaleValue');
        },
        set: function (value) {
            this._setOption('endScaleValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "margin", {
        get: function () {
            return this._getOption('margin');
        },
        set: function (value) {
            this._setOption('margin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "pathModified", {
        get: function () {
            return this._getOption('pathModified');
        },
        set: function (value) {
            this._setOption('pathModified', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "showTarget", {
        get: function () {
            return this._getOption('showTarget');
        },
        set: function (value) {
            this._setOption('showTarget', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "showZeroLevel", {
        get: function () {
            return this._getOption('showZeroLevel');
        },
        set: function (value) {
            this._setOption('showZeroLevel', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "size", {
        get: function () {
            return this._getOption('size');
        },
        set: function (value) {
            this._setOption('size', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "startScaleValue", {
        get: function () {
            return this._getOption('startScaleValue');
        },
        set: function (value) {
            this._setOption('startScaleValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "target", {
        get: function () {
            return this._getOption('target');
        },
        set: function (value) {
            this._setOption('target', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "targetColor", {
        get: function () {
            return this._getOption('targetColor');
        },
        set: function (value) {
            this._setOption('targetColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "targetWidth", {
        get: function () {
            return this._getOption('targetWidth');
        },
        set: function (value) {
            this._setOption('targetWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "theme", {
        get: function () {
            return this._getOption('theme');
        },
        set: function (value) {
            this._setOption('theme', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "tooltip", {
        get: function () {
            return this._getOption('tooltip');
        },
        set: function (value) {
            this._setOption('tooltip', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxBulletComponent.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    DxBulletComponent.prototype._createInstance = function (element, options) {
        return new bullet_1.default(element, options);
    };
    DxBulletComponent.prototype.ngOnDestroy = function () {
        this._destroyWidget();
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "color", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "elementAttr", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "endScaleValue", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "margin", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "pathModified", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "rtlEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "showTarget", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "showZeroLevel", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "size", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "startScaleValue", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "target", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "targetColor", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "targetWidth", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "theme", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "tooltip", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxBulletComponent.prototype, "value", null);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "onDisposing", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "onDrawn", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "onExported", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "onExporting", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "onFileSaving", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "onIncidentOccurred", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "onInitialized", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "onOptionChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "onTooltipHidden", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "onTooltipShown", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "colorChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "elementAttrChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "endScaleValueChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "marginChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "pathModifiedChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "rtlEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "showTargetChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "showZeroLevelChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "sizeChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "startScaleValueChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "targetChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "targetColorChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "targetWidthChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "themeChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "tooltipChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxBulletComponent.prototype, "valueChange", void 0);
    DxBulletComponent = __decorate([
        core_1.Component({
            selector: 'dx-bullet',
            template: '',
            styles: [' :host {  display: block; }'],
            providers: [
                template_host_1.DxTemplateHost,
                watcher_helper_1.WatcherHelper,
                nested_option_1.NestedOptionHost
            ]
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, core_1.NgZone, template_host_1.DxTemplateHost,
            watcher_helper_1.WatcherHelper, nested_option_1.NestedOptionHost])
    ], DxBulletComponent);
    return DxBulletComponent;
}(component_1.DxComponent));
exports.DxBulletComponent = DxBulletComponent;
var DxBulletModule = (function () {
    function DxBulletModule() {
    }
    DxBulletModule = __decorate([
        core_1.NgModule({
            imports: [
                margin_1.DxoMarginModule,
                size_1.DxoSizeModule,
                tooltip_1.DxoTooltipModule,
                border_1.DxoBorderModule,
                font_1.DxoFontModule,
                format_1.DxoFormatModule,
                shadow_1.DxoShadowModule,
                template_1.DxTemplateModule
            ],
            declarations: [
                DxBulletComponent
            ],
            exports: [
                DxBulletComponent,
                margin_1.DxoMarginModule,
                size_1.DxoSizeModule,
                tooltip_1.DxoTooltipModule,
                border_1.DxoBorderModule,
                font_1.DxoFontModule,
                format_1.DxoFormatModule,
                shadow_1.DxoShadowModule,
                template_1.DxTemplateModule
            ],
        })
    ], DxBulletModule);
    return DxBulletModule;
}());
exports.DxBulletModule = DxBulletModule;
//# sourceMappingURL=bullet.js.map