"use strict";
/*!
 * devextreme-angular
 * Version: 17.1.5
 * Build date: Wed Aug 02 2017
 *
 * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var range_selector_1 = require("devextreme/viz/range_selector");
var validator_1 = require("./validator");
var forms_1 = require("@angular/forms");
var component_1 = require("../core/component");
var template_host_1 = require("../core/template-host");
var template_1 = require("../core/template");
var nested_option_1 = require("../core/nested-option");
var watcher_helper_1 = require("../core/watcher-helper");
var iterable_differ_helper_1 = require("../core/iterable-differ-helper");
var background_1 = require("./nested/background");
var image_1 = require("./nested/image");
var behavior_1 = require("./nested/behavior");
var chart_1 = require("./nested/chart");
var common_series_settings_1 = require("./nested/common-series-settings");
var area_1 = require("./nested/area");
var border_1 = require("./nested/border");
var hover_style_1 = require("./nested/hover-style");
var hatching_1 = require("./nested/hatching");
var label_1 = require("./nested/label");
var connector_1 = require("./nested/connector");
var point_1 = require("./nested/point");
var height_1 = require("./nested/height");
var url_1 = require("./nested/url");
var width_1 = require("./nested/width");
var selection_style_1 = require("./nested/selection-style");
var reduction_1 = require("./nested/reduction");
var value_error_bar_1 = require("./nested/value-error-bar");
var bar_1 = require("./nested/bar");
var bubble_1 = require("./nested/bubble");
var candlestick_1 = require("./nested/candlestick");
var fullstackedarea_1 = require("./nested/fullstackedarea");
var fullstackedbar_1 = require("./nested/fullstackedbar");
var fullstackedline_1 = require("./nested/fullstackedline");
var fullstackedspline_1 = require("./nested/fullstackedspline");
var fullstackedsplinearea_1 = require("./nested/fullstackedsplinearea");
var argument_format_1 = require("./nested/argument-format");
var font_1 = require("./nested/font");
var format_1 = require("./nested/format");
var line_1 = require("./nested/line");
var rangearea_1 = require("./nested/rangearea");
var rangebar_1 = require("./nested/rangebar");
var scatter_1 = require("./nested/scatter");
var spline_1 = require("./nested/spline");
var splinearea_1 = require("./nested/splinearea");
var stackedarea_1 = require("./nested/stackedarea");
var stackedbar_1 = require("./nested/stackedbar");
var stackedline_1 = require("./nested/stackedline");
var stackedspline_1 = require("./nested/stackedspline");
var stackedsplinearea_1 = require("./nested/stackedsplinearea");
var steparea_1 = require("./nested/steparea");
var stepline_1 = require("./nested/stepline");
var stock_1 = require("./nested/stock");
var data_prepare_settings_1 = require("./nested/data-prepare-settings");
var series_dxi_1 = require("./nested/series-dxi");
var series_template_1 = require("./nested/series-template");
var value_axis_1 = require("./nested/value-axis");
var export_1 = require("./nested/export");
var indent_1 = require("./nested/indent");
var loading_indicator_1 = require("./nested/loading-indicator");
var margin_1 = require("./nested/margin");
var scale_1 = require("./nested/scale");
var major_tick_interval_1 = require("./nested/major-tick-interval");
var marker_1 = require("./nested/marker");
var max_range_1 = require("./nested/max-range");
var minor_tick_1 = require("./nested/minor-tick");
var minor_tick_interval_1 = require("./nested/minor-tick-interval");
var min_range_1 = require("./nested/min-range");
var tick_1 = require("./nested/tick");
var tick_interval_1 = require("./nested/tick-interval");
var selected_range_1 = require("./nested/selected-range");
var shutter_1 = require("./nested/shutter");
var size_1 = require("./nested/size");
var slider_handle_1 = require("./nested/slider-handle");
var slider_marker_1 = require("./nested/slider-marker");
var placeholder_size_1 = require("./nested/placeholder-size");
var title_1 = require("./nested/title");
var subtitle_1 = require("./nested/subtitle");
var CUSTOM_VALUE_ACCESSOR_PROVIDER = {
    provide: forms_1.NG_VALUE_ACCESSOR,
    useExisting: core_1.forwardRef(function () { return DxRangeSelectorComponent; }),
    multi: true
};
var DxRangeSelectorComponent = (function (_super) {
    __extends(DxRangeSelectorComponent, _super);
    function DxRangeSelectorComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost) {
        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper) || this;
        _this._watcherHelper = _watcherHelper;
        _this._idh = _idh;
        _this.touched = function () { };
        _this._createEventEmitters([
            { subscribe: 'disposing', emit: 'onDisposing' },
            { subscribe: 'drawn', emit: 'onDrawn' },
            { subscribe: 'exported', emit: 'onExported' },
            { subscribe: 'exporting', emit: 'onExporting' },
            { subscribe: 'fileSaving', emit: 'onFileSaving' },
            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },
            { subscribe: 'initialized', emit: 'onInitialized' },
            { subscribe: 'optionChanged', emit: 'onOptionChanged' },
            { subscribe: 'selectedRangeChanged', emit: 'onSelectedRangeChanged' },
            { subscribe: 'valueChanged', emit: 'onValueChanged' },
            { emit: 'backgroundChange' },
            { emit: 'behaviorChange' },
            { emit: 'chartChange' },
            { emit: 'containerBackgroundColorChange' },
            { emit: 'dataSourceChange' },
            { emit: 'dataSourceFieldChange' },
            { emit: 'elementAttrChange' },
            { emit: 'exportChange' },
            { emit: 'indentChange' },
            { emit: 'loadingIndicatorChange' },
            { emit: 'marginChange' },
            { emit: 'pathModifiedChange' },
            { emit: 'redrawOnResizeChange' },
            { emit: 'rtlEnabledChange' },
            { emit: 'scaleChange' },
            { emit: 'selectedRangeChange' },
            { emit: 'selectedRangeColorChange' },
            { emit: 'shutterChange' },
            { emit: 'sizeChange' },
            { emit: 'sliderHandleChange' },
            { emit: 'sliderMarkerChange' },
            { emit: 'themeChange' },
            { emit: 'titleChange' },
            { emit: 'valueChange' }
        ]);
        _this._idh.setHost(_this);
        optionHost.setHost(_this);
        return _this;
    }
    Object.defineProperty(DxRangeSelectorComponent.prototype, "background", {
        get: function () {
            return this._getOption('background');
        },
        set: function (value) {
            this._setOption('background', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "behavior", {
        get: function () {
            return this._getOption('behavior');
        },
        set: function (value) {
            this._setOption('behavior', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "chart", {
        get: function () {
            return this._getOption('chart');
        },
        set: function (value) {
            this._setOption('chart', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "containerBackgroundColor", {
        get: function () {
            return this._getOption('containerBackgroundColor');
        },
        set: function (value) {
            this._setOption('containerBackgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "dataSourceField", {
        get: function () {
            return this._getOption('dataSourceField');
        },
        set: function (value) {
            this._setOption('dataSourceField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "export", {
        get: function () {
            return this._getOption('export');
        },
        set: function (value) {
            this._setOption('export', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "indent", {
        get: function () {
            return this._getOption('indent');
        },
        set: function (value) {
            this._setOption('indent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "loadingIndicator", {
        get: function () {
            return this._getOption('loadingIndicator');
        },
        set: function (value) {
            this._setOption('loadingIndicator', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "margin", {
        get: function () {
            return this._getOption('margin');
        },
        set: function (value) {
            this._setOption('margin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "pathModified", {
        get: function () {
            return this._getOption('pathModified');
        },
        set: function (value) {
            this._setOption('pathModified', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "redrawOnResize", {
        get: function () {
            return this._getOption('redrawOnResize');
        },
        set: function (value) {
            this._setOption('redrawOnResize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "scale", {
        get: function () {
            return this._getOption('scale');
        },
        set: function (value) {
            this._setOption('scale', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "selectedRange", {
        get: function () {
            return this._getOption('selectedRange');
        },
        set: function (value) {
            this._setOption('selectedRange', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "selectedRangeColor", {
        get: function () {
            return this._getOption('selectedRangeColor');
        },
        set: function (value) {
            this._setOption('selectedRangeColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "shutter", {
        get: function () {
            return this._getOption('shutter');
        },
        set: function (value) {
            this._setOption('shutter', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "size", {
        get: function () {
            return this._getOption('size');
        },
        set: function (value) {
            this._setOption('size', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "sliderHandle", {
        get: function () {
            return this._getOption('sliderHandle');
        },
        set: function (value) {
            this._setOption('sliderHandle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "sliderMarker", {
        get: function () {
            return this._getOption('sliderMarker');
        },
        set: function (value) {
            this._setOption('sliderMarker', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "theme", {
        get: function () {
            return this._getOption('theme');
        },
        set: function (value) {
            this._setOption('theme', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "title", {
        get: function () {
            return this._getOption('title');
        },
        set: function (value) {
            this._setOption('title', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxRangeSelectorComponent.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    DxRangeSelectorComponent.prototype.change = function (_) { };
    DxRangeSelectorComponent.prototype._createInstance = function (element, options) {
        var widget = new range_selector_1.default(element, options);
        if (this.validator) {
            this.validator.createInstance(element);
        }
        return widget;
    };
    DxRangeSelectorComponent.prototype.writeValue = function (value) {
        this.value = value;
    };
    DxRangeSelectorComponent.prototype.registerOnChange = function (fn) { this.change = fn; };
    DxRangeSelectorComponent.prototype.registerOnTouched = function (fn) { this.touched = fn; };
    DxRangeSelectorComponent.prototype.ngOnDestroy = function () {
        this._destroyWidget();
    };
    DxRangeSelectorComponent.prototype.ngOnChanges = function (changes) {
        this._idh.setup('dataSource', changes);
        this._idh.setup('value', changes);
    };
    DxRangeSelectorComponent.prototype.ngDoCheck = function () {
        this._idh.doCheck('dataSource');
        this._idh.doCheck('value');
        this._watcherHelper.checkWatchers();
    };
    DxRangeSelectorComponent.prototype._updateOption = function (name, value) {
        if (Array.isArray(value)) {
            this._idh.setupSingle(name, value);
            this._idh.getChanges(name, value);
        }
        _super.prototype._updateOption.call(this, name, value);
    };
    DxRangeSelectorComponent.prototype.ngAfterContentInit = function () {
        if (this.validator) {
            this.validator.renderOnViewInit = false;
        }
    };
    __decorate([
        core_1.ContentChild(validator_1.DxValidatorComponent),
        __metadata("design:type", validator_1.DxValidatorComponent)
    ], DxRangeSelectorComponent.prototype, "validator", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "background", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "behavior", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "chart", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "containerBackgroundColor", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "dataSource", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "dataSourceField", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "elementAttr", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "export", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "indent", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "loadingIndicator", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "margin", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "pathModified", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "redrawOnResize", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "rtlEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "scale", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "selectedRange", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "selectedRangeColor", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "shutter", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "size", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "sliderHandle", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "sliderMarker", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "theme", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "title", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxRangeSelectorComponent.prototype, "value", null);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "onDisposing", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "onDrawn", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "onExported", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "onExporting", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "onFileSaving", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "onIncidentOccurred", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "onInitialized", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "onOptionChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "onSelectedRangeChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "onValueChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "backgroundChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "behaviorChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "chartChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "containerBackgroundColorChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "dataSourceChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "dataSourceFieldChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "elementAttrChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "exportChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "indentChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "loadingIndicatorChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "marginChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "pathModifiedChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "redrawOnResizeChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "rtlEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "scaleChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "selectedRangeChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "selectedRangeColorChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "shutterChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "sizeChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "sliderHandleChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "sliderMarkerChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "themeChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "titleChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxRangeSelectorComponent.prototype, "valueChange", void 0);
    __decorate([
        core_1.HostListener('valueChange', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], DxRangeSelectorComponent.prototype, "change", null);
    DxRangeSelectorComponent = __decorate([
        core_1.Component({
            selector: 'dx-range-selector',
            template: '',
            styles: [' :host {  display: block; }'],
            providers: [
                template_host_1.DxTemplateHost,
                watcher_helper_1.WatcherHelper,
                CUSTOM_VALUE_ACCESSOR_PROVIDER,
                nested_option_1.NestedOptionHost,
                iterable_differ_helper_1.IterableDifferHelper
            ]
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, core_1.NgZone, template_host_1.DxTemplateHost,
            watcher_helper_1.WatcherHelper,
            iterable_differ_helper_1.IterableDifferHelper, nested_option_1.NestedOptionHost])
    ], DxRangeSelectorComponent);
    return DxRangeSelectorComponent;
}(component_1.DxComponent));
exports.DxRangeSelectorComponent = DxRangeSelectorComponent;
var DxRangeSelectorModule = (function () {
    function DxRangeSelectorModule() {
    }
    DxRangeSelectorModule = __decorate([
        core_1.NgModule({
            imports: [
                background_1.DxoBackgroundModule,
                image_1.DxoImageModule,
                behavior_1.DxoBehaviorModule,
                chart_1.DxoChartModule,
                common_series_settings_1.DxoCommonSeriesSettingsModule,
                area_1.DxoAreaModule,
                border_1.DxoBorderModule,
                hover_style_1.DxoHoverStyleModule,
                hatching_1.DxoHatchingModule,
                label_1.DxoLabelModule,
                connector_1.DxoConnectorModule,
                point_1.DxoPointModule,
                height_1.DxoHeightModule,
                url_1.DxoUrlModule,
                width_1.DxoWidthModule,
                selection_style_1.DxoSelectionStyleModule,
                reduction_1.DxoReductionModule,
                value_error_bar_1.DxoValueErrorBarModule,
                bar_1.DxoBarModule,
                bubble_1.DxoBubbleModule,
                candlestick_1.DxoCandlestickModule,
                fullstackedarea_1.DxoFullstackedareaModule,
                fullstackedbar_1.DxoFullstackedbarModule,
                fullstackedline_1.DxoFullstackedlineModule,
                fullstackedspline_1.DxoFullstackedsplineModule,
                fullstackedsplinearea_1.DxoFullstackedsplineareaModule,
                argument_format_1.DxoArgumentFormatModule,
                font_1.DxoFontModule,
                format_1.DxoFormatModule,
                line_1.DxoLineModule,
                rangearea_1.DxoRangeareaModule,
                rangebar_1.DxoRangebarModule,
                scatter_1.DxoScatterModule,
                spline_1.DxoSplineModule,
                splinearea_1.DxoSplineareaModule,
                stackedarea_1.DxoStackedareaModule,
                stackedbar_1.DxoStackedbarModule,
                stackedline_1.DxoStackedlineModule,
                stackedspline_1.DxoStackedsplineModule,
                stackedsplinearea_1.DxoStackedsplineareaModule,
                steparea_1.DxoStepareaModule,
                stepline_1.DxoSteplineModule,
                stock_1.DxoStockModule,
                data_prepare_settings_1.DxoDataPrepareSettingsModule,
                series_dxi_1.DxiSeriesModule,
                series_template_1.DxoSeriesTemplateModule,
                value_axis_1.DxoValueAxisModule,
                export_1.DxoExportModule,
                indent_1.DxoIndentModule,
                loading_indicator_1.DxoLoadingIndicatorModule,
                margin_1.DxoMarginModule,
                scale_1.DxoScaleModule,
                major_tick_interval_1.DxoMajorTickIntervalModule,
                marker_1.DxoMarkerModule,
                max_range_1.DxoMaxRangeModule,
                minor_tick_1.DxoMinorTickModule,
                minor_tick_interval_1.DxoMinorTickIntervalModule,
                min_range_1.DxoMinRangeModule,
                tick_1.DxoTickModule,
                tick_interval_1.DxoTickIntervalModule,
                selected_range_1.DxoSelectedRangeModule,
                shutter_1.DxoShutterModule,
                size_1.DxoSizeModule,
                slider_handle_1.DxoSliderHandleModule,
                slider_marker_1.DxoSliderMarkerModule,
                placeholder_size_1.DxoPlaceholderSizeModule,
                title_1.DxoTitleModule,
                subtitle_1.DxoSubtitleModule,
                template_1.DxTemplateModule
            ],
            declarations: [
                DxRangeSelectorComponent
            ],
            exports: [
                DxRangeSelectorComponent,
                background_1.DxoBackgroundModule,
                image_1.DxoImageModule,
                behavior_1.DxoBehaviorModule,
                chart_1.DxoChartModule,
                common_series_settings_1.DxoCommonSeriesSettingsModule,
                area_1.DxoAreaModule,
                border_1.DxoBorderModule,
                hover_style_1.DxoHoverStyleModule,
                hatching_1.DxoHatchingModule,
                label_1.DxoLabelModule,
                connector_1.DxoConnectorModule,
                point_1.DxoPointModule,
                height_1.DxoHeightModule,
                url_1.DxoUrlModule,
                width_1.DxoWidthModule,
                selection_style_1.DxoSelectionStyleModule,
                reduction_1.DxoReductionModule,
                value_error_bar_1.DxoValueErrorBarModule,
                bar_1.DxoBarModule,
                bubble_1.DxoBubbleModule,
                candlestick_1.DxoCandlestickModule,
                fullstackedarea_1.DxoFullstackedareaModule,
                fullstackedbar_1.DxoFullstackedbarModule,
                fullstackedline_1.DxoFullstackedlineModule,
                fullstackedspline_1.DxoFullstackedsplineModule,
                fullstackedsplinearea_1.DxoFullstackedsplineareaModule,
                argument_format_1.DxoArgumentFormatModule,
                font_1.DxoFontModule,
                format_1.DxoFormatModule,
                line_1.DxoLineModule,
                rangearea_1.DxoRangeareaModule,
                rangebar_1.DxoRangebarModule,
                scatter_1.DxoScatterModule,
                spline_1.DxoSplineModule,
                splinearea_1.DxoSplineareaModule,
                stackedarea_1.DxoStackedareaModule,
                stackedbar_1.DxoStackedbarModule,
                stackedline_1.DxoStackedlineModule,
                stackedspline_1.DxoStackedsplineModule,
                stackedsplinearea_1.DxoStackedsplineareaModule,
                steparea_1.DxoStepareaModule,
                stepline_1.DxoSteplineModule,
                stock_1.DxoStockModule,
                data_prepare_settings_1.DxoDataPrepareSettingsModule,
                series_dxi_1.DxiSeriesModule,
                series_template_1.DxoSeriesTemplateModule,
                value_axis_1.DxoValueAxisModule,
                export_1.DxoExportModule,
                indent_1.DxoIndentModule,
                loading_indicator_1.DxoLoadingIndicatorModule,
                margin_1.DxoMarginModule,
                scale_1.DxoScaleModule,
                major_tick_interval_1.DxoMajorTickIntervalModule,
                marker_1.DxoMarkerModule,
                max_range_1.DxoMaxRangeModule,
                minor_tick_1.DxoMinorTickModule,
                minor_tick_interval_1.DxoMinorTickIntervalModule,
                min_range_1.DxoMinRangeModule,
                tick_1.DxoTickModule,
                tick_interval_1.DxoTickIntervalModule,
                selected_range_1.DxoSelectedRangeModule,
                shutter_1.DxoShutterModule,
                size_1.DxoSizeModule,
                slider_handle_1.DxoSliderHandleModule,
                slider_marker_1.DxoSliderMarkerModule,
                placeholder_size_1.DxoPlaceholderSizeModule,
                title_1.DxoTitleModule,
                subtitle_1.DxoSubtitleModule,
                template_1.DxTemplateModule
            ],
        })
    ], DxRangeSelectorModule);
    return DxRangeSelectorModule;
}());
exports.DxRangeSelectorModule = DxRangeSelectorModule;
//# sourceMappingURL=range-selector.js.map