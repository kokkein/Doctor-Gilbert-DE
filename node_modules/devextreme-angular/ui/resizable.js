"use strict";
/*!
 * devextreme-angular
 * Version: 17.1.5
 * Build date: Wed Aug 02 2017
 *
 * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var resizable_1 = require("devextreme/ui/resizable");
var component_1 = require("../core/component");
var template_host_1 = require("../core/template-host");
var template_1 = require("../core/template");
var nested_option_1 = require("../core/nested-option");
var watcher_helper_1 = require("../core/watcher-helper");
var DxResizableComponent = (function (_super) {
    __extends(DxResizableComponent, _super);
    function DxResizableComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost) {
        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper) || this;
        _this._createEventEmitters([
            { subscribe: 'disposing', emit: 'onDisposing' },
            { subscribe: 'initialized', emit: 'onInitialized' },
            { subscribe: 'optionChanged', emit: 'onOptionChanged' },
            { subscribe: 'resize', emit: 'onResize' },
            { subscribe: 'resizeEnd', emit: 'onResizeEnd' },
            { subscribe: 'resizeStart', emit: 'onResizeStart' },
            { emit: 'elementAttrChange' },
            { emit: 'handlesChange' },
            { emit: 'heightChange' },
            { emit: 'maxHeightChange' },
            { emit: 'maxWidthChange' },
            { emit: 'minHeightChange' },
            { emit: 'minWidthChange' },
            { emit: 'rtlEnabledChange' },
            { emit: 'widthChange' }
        ]);
        optionHost.setHost(_this);
        return _this;
    }
    Object.defineProperty(DxResizableComponent.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxResizableComponent.prototype, "handles", {
        get: function () {
            return this._getOption('handles');
        },
        set: function (value) {
            this._setOption('handles', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxResizableComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxResizableComponent.prototype, "maxHeight", {
        get: function () {
            return this._getOption('maxHeight');
        },
        set: function (value) {
            this._setOption('maxHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxResizableComponent.prototype, "maxWidth", {
        get: function () {
            return this._getOption('maxWidth');
        },
        set: function (value) {
            this._setOption('maxWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxResizableComponent.prototype, "minHeight", {
        get: function () {
            return this._getOption('minHeight');
        },
        set: function (value) {
            this._setOption('minHeight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxResizableComponent.prototype, "minWidth", {
        get: function () {
            return this._getOption('minWidth');
        },
        set: function (value) {
            this._setOption('minWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxResizableComponent.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxResizableComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    DxResizableComponent.prototype._createInstance = function (element, options) {
        return new resizable_1.default(element, options);
    };
    DxResizableComponent.prototype.ngOnDestroy = function () {
        this._destroyWidget();
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxResizableComponent.prototype, "elementAttr", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxResizableComponent.prototype, "handles", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxResizableComponent.prototype, "height", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxResizableComponent.prototype, "maxHeight", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxResizableComponent.prototype, "maxWidth", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxResizableComponent.prototype, "minHeight", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxResizableComponent.prototype, "minWidth", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxResizableComponent.prototype, "rtlEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxResizableComponent.prototype, "width", null);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "onDisposing", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "onInitialized", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "onOptionChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "onResize", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "onResizeEnd", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "onResizeStart", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "elementAttrChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "handlesChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "heightChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "maxHeightChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "maxWidthChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "minHeightChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "minWidthChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "rtlEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxResizableComponent.prototype, "widthChange", void 0);
    DxResizableComponent = __decorate([
        core_1.Component({
            selector: 'dx-resizable',
            template: '<ng-content></ng-content>',
            providers: [
                template_host_1.DxTemplateHost,
                watcher_helper_1.WatcherHelper,
                nested_option_1.NestedOptionHost
            ]
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, core_1.NgZone, template_host_1.DxTemplateHost,
            watcher_helper_1.WatcherHelper, nested_option_1.NestedOptionHost])
    ], DxResizableComponent);
    return DxResizableComponent;
}(component_1.DxComponent));
exports.DxResizableComponent = DxResizableComponent;
var DxResizableModule = (function () {
    function DxResizableModule() {
    }
    DxResizableModule = __decorate([
        core_1.NgModule({
            imports: [
                template_1.DxTemplateModule
            ],
            declarations: [
                DxResizableComponent
            ],
            exports: [
                DxResizableComponent,
                template_1.DxTemplateModule
            ],
        })
    ], DxResizableModule);
    return DxResizableModule;
}());
exports.DxResizableModule = DxResizableModule;
//# sourceMappingURL=resizable.js.map