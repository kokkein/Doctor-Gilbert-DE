"use strict";
/*!
 * devextreme-angular
 * Version: 17.1.5
 * Build date: Wed Aug 02 2017
 *
 * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var tag_box_1 = require("devextreme/ui/tag_box");
var validator_1 = require("./validator");
var forms_1 = require("@angular/forms");
var component_1 = require("../core/component");
var template_host_1 = require("../core/template-host");
var template_1 = require("../core/template");
var nested_option_1 = require("../core/nested-option");
var watcher_helper_1 = require("../core/watcher-helper");
var iterable_differ_helper_1 = require("../core/iterable-differ-helper");
var item_dxi_1 = require("./nested/item-dxi");
var item_dxi_2 = require("./nested/item-dxi");
var CUSTOM_VALUE_ACCESSOR_PROVIDER = {
    provide: forms_1.NG_VALUE_ACCESSOR,
    useExisting: core_1.forwardRef(function () { return DxTagBoxComponent; }),
    multi: true
};
var DxTagBoxComponent = (function (_super) {
    __extends(DxTagBoxComponent, _super);
    function DxTagBoxComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost) {
        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper) || this;
        _this._watcherHelper = _watcherHelper;
        _this._idh = _idh;
        _this.touched = function () { };
        _this._createEventEmitters([
            { subscribe: 'change', emit: 'onChange' },
            { subscribe: 'closed', emit: 'onClosed' },
            { subscribe: 'contentReady', emit: 'onContentReady' },
            { subscribe: 'customItemCreating', emit: 'onCustomItemCreating' },
            { subscribe: 'disposing', emit: 'onDisposing' },
            { subscribe: 'enterKey', emit: 'onEnterKey' },
            { subscribe: 'focusIn', emit: 'onFocusIn' },
            { subscribe: 'focusOut', emit: 'onFocusOut' },
            { subscribe: 'initialized', emit: 'onInitialized' },
            { subscribe: 'input', emit: 'onInput' },
            { subscribe: 'itemClick', emit: 'onItemClick' },
            { subscribe: 'keyDown', emit: 'onKeyDown' },
            { subscribe: 'keyPress', emit: 'onKeyPress' },
            { subscribe: 'keyUp', emit: 'onKeyUp' },
            { subscribe: 'multiTagPreparing', emit: 'onMultiTagPreparing' },
            { subscribe: 'opened', emit: 'onOpened' },
            { subscribe: 'optionChanged', emit: 'onOptionChanged' },
            { subscribe: 'selectAllValueChanged', emit: 'onSelectAllValueChanged' },
            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },
            { subscribe: 'valueChanged', emit: 'onValueChanged' },
            { emit: 'acceptCustomValueChange' },
            { emit: 'accessKeyChange' },
            { emit: 'activeStateEnabledChange' },
            { emit: 'applyValueModeChange' },
            { emit: 'attrChange' },
            { emit: 'dataSourceChange' },
            { emit: 'deferRenderingChange' },
            { emit: 'disabledChange' },
            { emit: 'displayExprChange' },
            { emit: 'dropDownButtonTemplateChange' },
            { emit: 'elementAttrChange' },
            { emit: 'fieldEditEnabledChange' },
            { emit: 'fieldTemplateChange' },
            { emit: 'focusStateEnabledChange' },
            { emit: 'groupedChange' },
            { emit: 'groupTemplateChange' },
            { emit: 'heightChange' },
            { emit: 'hideSelectedItemsChange' },
            { emit: 'hintChange' },
            { emit: 'hoverStateEnabledChange' },
            { emit: 'inputAttrChange' },
            { emit: 'isValidChange' },
            { emit: 'itemsChange' },
            { emit: 'itemTemplateChange' },
            { emit: 'maxDisplayedTagsChange' },
            { emit: 'minSearchLengthChange' },
            { emit: 'multilineChange' },
            { emit: 'nameChange' },
            { emit: 'noDataTextChange' },
            { emit: 'openedChange' },
            { emit: 'pagingEnabledChange' },
            { emit: 'placeholderChange' },
            { emit: 'readOnlyChange' },
            { emit: 'rtlEnabledChange' },
            { emit: 'searchEnabledChange' },
            { emit: 'searchExprChange' },
            { emit: 'searchModeChange' },
            { emit: 'searchTimeoutChange' },
            { emit: 'selectAllModeChange' },
            { emit: 'selectedItemsChange' },
            { emit: 'showClearButtonChange' },
            { emit: 'showDataBeforeSearchChange' },
            { emit: 'showMultiTagOnlyChange' },
            { emit: 'showSelectionControlsChange' },
            { emit: 'tabIndexChange' },
            { emit: 'tagTemplateChange' },
            { emit: 'textChange' },
            { emit: 'validationErrorChange' },
            { emit: 'validationMessageModeChange' },
            { emit: 'valueChange' },
            { emit: 'valueExprChange' },
            { emit: 'valuesChange' },
            { emit: 'visibleChange' },
            { emit: 'widthChange' }
        ]);
        _this._idh.setHost(_this);
        optionHost.setHost(_this);
        return _this;
    }
    Object.defineProperty(DxTagBoxComponent.prototype, "acceptCustomValue", {
        get: function () {
            return this._getOption('acceptCustomValue');
        },
        set: function (value) {
            this._setOption('acceptCustomValue', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "accessKey", {
        get: function () {
            return this._getOption('accessKey');
        },
        set: function (value) {
            this._setOption('accessKey', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "activeStateEnabled", {
        get: function () {
            return this._getOption('activeStateEnabled');
        },
        set: function (value) {
            this._setOption('activeStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "applyValueMode", {
        get: function () {
            return this._getOption('applyValueMode');
        },
        set: function (value) {
            this._setOption('applyValueMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "attr", {
        get: function () {
            return this._getOption('attr');
        },
        set: function (value) {
            this._setOption('attr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "deferRendering", {
        get: function () {
            return this._getOption('deferRendering');
        },
        set: function (value) {
            this._setOption('deferRendering', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "disabled", {
        get: function () {
            return this._getOption('disabled');
        },
        set: function (value) {
            this._setOption('disabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "displayExpr", {
        get: function () {
            return this._getOption('displayExpr');
        },
        set: function (value) {
            this._setOption('displayExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "dropDownButtonTemplate", {
        get: function () {
            return this._getOption('dropDownButtonTemplate');
        },
        set: function (value) {
            this._setOption('dropDownButtonTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "elementAttr", {
        get: function () {
            return this._getOption('elementAttr');
        },
        set: function (value) {
            this._setOption('elementAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "fieldEditEnabled", {
        get: function () {
            return this._getOption('fieldEditEnabled');
        },
        set: function (value) {
            this._setOption('fieldEditEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "fieldTemplate", {
        get: function () {
            return this._getOption('fieldTemplate');
        },
        set: function (value) {
            this._setOption('fieldTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "focusStateEnabled", {
        get: function () {
            return this._getOption('focusStateEnabled');
        },
        set: function (value) {
            this._setOption('focusStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "grouped", {
        get: function () {
            return this._getOption('grouped');
        },
        set: function (value) {
            this._setOption('grouped', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "groupTemplate", {
        get: function () {
            return this._getOption('groupTemplate');
        },
        set: function (value) {
            this._setOption('groupTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "hideSelectedItems", {
        get: function () {
            return this._getOption('hideSelectedItems');
        },
        set: function (value) {
            this._setOption('hideSelectedItems', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "hint", {
        get: function () {
            return this._getOption('hint');
        },
        set: function (value) {
            this._setOption('hint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "hoverStateEnabled", {
        get: function () {
            return this._getOption('hoverStateEnabled');
        },
        set: function (value) {
            this._setOption('hoverStateEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "inputAttr", {
        get: function () {
            return this._getOption('inputAttr');
        },
        set: function (value) {
            this._setOption('inputAttr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "isValid", {
        get: function () {
            return this._getOption('isValid');
        },
        set: function (value) {
            this._setOption('isValid', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "items", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this._setOption('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "itemTemplate", {
        get: function () {
            return this._getOption('itemTemplate');
        },
        set: function (value) {
            this._setOption('itemTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "maxDisplayedTags", {
        get: function () {
            return this._getOption('maxDisplayedTags');
        },
        set: function (value) {
            this._setOption('maxDisplayedTags', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "minSearchLength", {
        get: function () {
            return this._getOption('minSearchLength');
        },
        set: function (value) {
            this._setOption('minSearchLength', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "multiline", {
        get: function () {
            return this._getOption('multiline');
        },
        set: function (value) {
            this._setOption('multiline', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "noDataText", {
        get: function () {
            return this._getOption('noDataText');
        },
        set: function (value) {
            this._setOption('noDataText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "opened", {
        get: function () {
            return this._getOption('opened');
        },
        set: function (value) {
            this._setOption('opened', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "pagingEnabled", {
        get: function () {
            return this._getOption('pagingEnabled');
        },
        set: function (value) {
            this._setOption('pagingEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "placeholder", {
        get: function () {
            return this._getOption('placeholder');
        },
        set: function (value) {
            this._setOption('placeholder', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "readOnly", {
        get: function () {
            return this._getOption('readOnly');
        },
        set: function (value) {
            this._setOption('readOnly', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "rtlEnabled", {
        get: function () {
            return this._getOption('rtlEnabled');
        },
        set: function (value) {
            this._setOption('rtlEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "searchEnabled", {
        get: function () {
            return this._getOption('searchEnabled');
        },
        set: function (value) {
            this._setOption('searchEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "searchExpr", {
        get: function () {
            return this._getOption('searchExpr');
        },
        set: function (value) {
            this._setOption('searchExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "searchMode", {
        get: function () {
            return this._getOption('searchMode');
        },
        set: function (value) {
            this._setOption('searchMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "searchTimeout", {
        get: function () {
            return this._getOption('searchTimeout');
        },
        set: function (value) {
            this._setOption('searchTimeout', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "selectAllMode", {
        get: function () {
            return this._getOption('selectAllMode');
        },
        set: function (value) {
            this._setOption('selectAllMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "selectedItems", {
        get: function () {
            return this._getOption('selectedItems');
        },
        set: function (value) {
            this._setOption('selectedItems', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "showClearButton", {
        get: function () {
            return this._getOption('showClearButton');
        },
        set: function (value) {
            this._setOption('showClearButton', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "showDataBeforeSearch", {
        get: function () {
            return this._getOption('showDataBeforeSearch');
        },
        set: function (value) {
            this._setOption('showDataBeforeSearch', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "showMultiTagOnly", {
        get: function () {
            return this._getOption('showMultiTagOnly');
        },
        set: function (value) {
            this._setOption('showMultiTagOnly', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "showSelectionControls", {
        get: function () {
            return this._getOption('showSelectionControls');
        },
        set: function (value) {
            this._setOption('showSelectionControls', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "tabIndex", {
        get: function () {
            return this._getOption('tabIndex');
        },
        set: function (value) {
            this._setOption('tabIndex', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "tagTemplate", {
        get: function () {
            return this._getOption('tagTemplate');
        },
        set: function (value) {
            this._setOption('tagTemplate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "validationError", {
        get: function () {
            return this._getOption('validationError');
        },
        set: function (value) {
            this._setOption('validationError', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "validationMessageMode", {
        get: function () {
            return this._getOption('validationMessageMode');
        },
        set: function (value) {
            this._setOption('validationMessageMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "value", {
        get: function () {
            return this._getOption('value');
        },
        set: function (value) {
            this._setOption('value', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "valueExpr", {
        get: function () {
            return this._getOption('valueExpr');
        },
        set: function (value) {
            this._setOption('valueExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "values", {
        get: function () {
            return this._getOption('values');
        },
        set: function (value) {
            this._setOption('values', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxTagBoxComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    DxTagBoxComponent.prototype.change = function (_) { };
    Object.defineProperty(DxTagBoxComponent.prototype, "itemsChildren", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this.setChildren('items', value);
        },
        enumerable: true,
        configurable: true
    });
    DxTagBoxComponent.prototype._createInstance = function (element, options) {
        var widget = new tag_box_1.default(element, options);
        if (this.validator) {
            this.validator.createInstance(element);
        }
        return widget;
    };
    DxTagBoxComponent.prototype.writeValue = function (value) {
        this.value = value;
    };
    DxTagBoxComponent.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    DxTagBoxComponent.prototype.registerOnChange = function (fn) { this.change = fn; };
    DxTagBoxComponent.prototype.registerOnTouched = function (fn) { this.touched = fn; };
    DxTagBoxComponent.prototype.ngOnDestroy = function () {
        this._destroyWidget();
    };
    DxTagBoxComponent.prototype.ngOnChanges = function (changes) {
        this._idh.setup('dataSource', changes);
        this._idh.setup('items', changes);
        this._idh.setup('searchExpr', changes);
        this._idh.setup('selectedItems', changes);
        this._idh.setup('value', changes);
    };
    DxTagBoxComponent.prototype.ngDoCheck = function () {
        this._idh.doCheck('dataSource');
        this._idh.doCheck('items');
        this._idh.doCheck('searchExpr');
        this._idh.doCheck('selectedItems');
        this._idh.doCheck('value');
        this._watcherHelper.checkWatchers();
    };
    DxTagBoxComponent.prototype._updateOption = function (name, value) {
        if (Array.isArray(value)) {
            this._idh.setupSingle(name, value);
            this._idh.getChanges(name, value);
        }
        _super.prototype._updateOption.call(this, name, value);
    };
    DxTagBoxComponent.prototype.ngAfterContentInit = function () {
        if (this.validator) {
            this.validator.renderOnViewInit = false;
        }
    };
    __decorate([
        core_1.ContentChild(validator_1.DxValidatorComponent),
        __metadata("design:type", validator_1.DxValidatorComponent)
    ], DxTagBoxComponent.prototype, "validator", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "acceptCustomValue", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "accessKey", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "activeStateEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "applyValueMode", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "attr", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "dataSource", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "deferRendering", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "disabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "displayExpr", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "dropDownButtonTemplate", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "elementAttr", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "fieldEditEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "fieldTemplate", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "focusStateEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "grouped", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "groupTemplate", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "height", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "hideSelectedItems", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "hint", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "hoverStateEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "inputAttr", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "isValid", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "items", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "itemTemplate", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "maxDisplayedTags", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "minSearchLength", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "multiline", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "name", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "noDataText", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "opened", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "pagingEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "placeholder", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "readOnly", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "rtlEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "searchEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "searchExpr", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "searchMode", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "searchTimeout", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "selectAllMode", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "selectedItems", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "showClearButton", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "showDataBeforeSearch", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "showMultiTagOnly", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "showSelectionControls", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "tabIndex", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "tagTemplate", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "text", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "validationError", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "validationMessageMode", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "value", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "valueExpr", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "values", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "visible", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "width", null);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onClosed", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onContentReady", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onCustomItemCreating", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onDisposing", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onEnterKey", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onFocusIn", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onFocusOut", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onInitialized", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onInput", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onItemClick", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onKeyDown", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onKeyPress", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onKeyUp", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onMultiTagPreparing", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onOpened", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onOptionChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onSelectAllValueChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onSelectionChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "onValueChanged", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "acceptCustomValueChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "accessKeyChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "activeStateEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "applyValueModeChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "attrChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "dataSourceChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "deferRenderingChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "disabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "displayExprChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "dropDownButtonTemplateChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "elementAttrChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "fieldEditEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "fieldTemplateChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "focusStateEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "groupedChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "groupTemplateChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "heightChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "hideSelectedItemsChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "hintChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "hoverStateEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "inputAttrChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "isValidChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "itemsChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "itemTemplateChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "maxDisplayedTagsChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "minSearchLengthChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "multilineChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "nameChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "noDataTextChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "openedChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "pagingEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "placeholderChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "readOnlyChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "rtlEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "searchEnabledChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "searchExprChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "searchModeChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "searchTimeoutChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "selectAllModeChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "selectedItemsChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "showClearButtonChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "showDataBeforeSearchChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "showMultiTagOnlyChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "showSelectionControlsChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "tabIndexChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "tagTemplateChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "textChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "validationErrorChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "validationMessageModeChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "valueChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "valueExprChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "valuesChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "visibleChange", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", Object)
    ], DxTagBoxComponent.prototype, "widthChange", void 0);
    __decorate([
        core_1.HostListener('valueChange', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], DxTagBoxComponent.prototype, "change", null);
    __decorate([
        core_1.ContentChildren(item_dxi_2.DxiItemComponent),
        __metadata("design:type", core_1.QueryList),
        __metadata("design:paramtypes", [Object])
    ], DxTagBoxComponent.prototype, "itemsChildren", null);
    DxTagBoxComponent = __decorate([
        core_1.Component({
            selector: 'dx-tag-box',
            template: '',
            providers: [
                template_host_1.DxTemplateHost,
                watcher_helper_1.WatcherHelper,
                CUSTOM_VALUE_ACCESSOR_PROVIDER,
                nested_option_1.NestedOptionHost,
                iterable_differ_helper_1.IterableDifferHelper
            ]
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, core_1.NgZone, template_host_1.DxTemplateHost,
            watcher_helper_1.WatcherHelper,
            iterable_differ_helper_1.IterableDifferHelper, nested_option_1.NestedOptionHost])
    ], DxTagBoxComponent);
    return DxTagBoxComponent;
}(component_1.DxComponent));
exports.DxTagBoxComponent = DxTagBoxComponent;
var DxTagBoxModule = (function () {
    function DxTagBoxModule() {
    }
    DxTagBoxModule = __decorate([
        core_1.NgModule({
            imports: [
                item_dxi_1.DxiItemModule,
                template_1.DxTemplateModule
            ],
            declarations: [
                DxTagBoxComponent
            ],
            exports: [
                DxTagBoxComponent,
                item_dxi_1.DxiItemModule,
                template_1.DxTemplateModule
            ],
        })
    ], DxTagBoxModule);
    return DxTagBoxModule;
}());
exports.DxTagBoxModule = DxTagBoxModule;
//# sourceMappingURL=tag-box.js.map