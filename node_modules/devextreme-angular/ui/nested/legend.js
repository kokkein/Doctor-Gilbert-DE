"use strict";
/*!
 * devextreme-angular
 * Version: 17.1.5
 * Build date: Wed Aug 02 2017
 *
 * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var nested_option_1 = require("../../core/nested-option");
var nested_option_2 = require("../../core/nested-option");
var DxoLegendComponent = (function (_super) {
    __extends(DxoLegendComponent, _super);
    function DxoLegendComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoLegendComponent.prototype, "backgroundColor", {
        get: function () {
            return this._getOption('backgroundColor');
        },
        set: function (value) {
            this._setOption('backgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "columnCount", {
        get: function () {
            return this._getOption('columnCount');
        },
        set: function (value) {
            this._setOption('columnCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "columnItemSpacing", {
        get: function () {
            return this._getOption('columnItemSpacing');
        },
        set: function (value) {
            this._setOption('columnItemSpacing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "customizeHint", {
        get: function () {
            return this._getOption('customizeHint');
        },
        set: function (value) {
            this._setOption('customizeHint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "horizontalAlignment", {
        get: function () {
            return this._getOption('horizontalAlignment');
        },
        set: function (value) {
            this._setOption('horizontalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "hoverMode", {
        get: function () {
            return this._getOption('hoverMode');
        },
        set: function (value) {
            this._setOption('hoverMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "itemsAlignment", {
        get: function () {
            return this._getOption('itemsAlignment');
        },
        set: function (value) {
            this._setOption('itemsAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "itemTextPosition", {
        get: function () {
            return this._getOption('itemTextPosition');
        },
        set: function (value) {
            this._setOption('itemTextPosition', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "margin", {
        get: function () {
            return this._getOption('margin');
        },
        set: function (value) {
            this._setOption('margin', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "markerSize", {
        get: function () {
            return this._getOption('markerSize');
        },
        set: function (value) {
            this._setOption('markerSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "orientation", {
        get: function () {
            return this._getOption('orientation');
        },
        set: function (value) {
            this._setOption('orientation', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "paddingLeftRight", {
        get: function () {
            return this._getOption('paddingLeftRight');
        },
        set: function (value) {
            this._setOption('paddingLeftRight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "paddingTopBottom", {
        get: function () {
            return this._getOption('paddingTopBottom');
        },
        set: function (value) {
            this._setOption('paddingTopBottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "position", {
        get: function () {
            return this._getOption('position');
        },
        set: function (value) {
            this._setOption('position', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "rowCount", {
        get: function () {
            return this._getOption('rowCount');
        },
        set: function (value) {
            this._setOption('rowCount', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "rowItemSpacing", {
        get: function () {
            return this._getOption('rowItemSpacing');
        },
        set: function (value) {
            this._setOption('rowItemSpacing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "verticalAlignment", {
        get: function () {
            return this._getOption('verticalAlignment');
        },
        set: function (value) {
            this._setOption('verticalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLegendComponent.prototype, "_optionPath", {
        get: function () {
            return 'legend';
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "backgroundColor", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "border", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "columnCount", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "columnItemSpacing", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "customizeHint", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "customizeText", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "font", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "horizontalAlignment", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "hoverMode", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "itemsAlignment", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "itemTextPosition", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "margin", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "markerSize", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "orientation", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "paddingLeftRight", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "paddingTopBottom", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "position", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "rowCount", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "rowItemSpacing", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "verticalAlignment", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLegendComponent.prototype, "visible", null);
    DxoLegendComponent = __decorate([
        core_1.Component({
            selector: 'dxo-legend',
            template: '',
            styles: [''],
            providers: [nested_option_1.NestedOptionHost]
        }),
        __param(0, core_1.SkipSelf()), __param(0, core_1.Host()), __param(1, core_1.Host()),
        __metadata("design:paramtypes", [nested_option_1.NestedOptionHost, nested_option_1.NestedOptionHost])
    ], DxoLegendComponent);
    return DxoLegendComponent;
}(nested_option_2.NestedOption));
exports.DxoLegendComponent = DxoLegendComponent;
var DxoLegendModule = (function () {
    function DxoLegendModule() {
    }
    DxoLegendModule = __decorate([
        core_1.NgModule({
            declarations: [
                DxoLegendComponent
            ],
            exports: [
                DxoLegendComponent
            ],
        })
    ], DxoLegendModule);
    return DxoLegendModule;
}());
exports.DxoLegendModule = DxoLegendModule;
//# sourceMappingURL=legend.js.map