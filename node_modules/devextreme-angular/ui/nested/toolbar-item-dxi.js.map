{"version":3,"file":"toolbar-item-dxi.js","sourceRoot":"","sources":["toolbar-item-dxi.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 17.1.5\n * Build date: Wed Aug 02 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    Host,\r\n    ElementRef,\r\n    AfterViewInit,\r\n    SkipSelf,\r\n    Input\r\n} from '@angular/core';\r\n\r\nimport { NestedOptionHost, extractTemplate } from '../../core/nested-option';\r\nimport { CollectionNestedOption } from '../../core/nested-option';\r\n\r\n\r\n@Component({\r\n    selector: 'dxi-toolbar-item',\r\n    template: '<ng-content></ng-content>',\r\n    styles: [':host { display: block; }'],\r\n    providers: [NestedOptionHost]\r\n})\r\nexport class DxiToolbarItemComponent extends CollectionNestedOption implements AfterViewInit {\r\n    @Input()\r\n    get disabled() {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: any) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n    @Input()\r\n    get html() {\r\n        return this._getOption('html');\r\n    }\r\n    set html(value: any) {\r\n        this._setOption('html', value);\r\n    }\r\n\r\n    @Input()\r\n    get location() {\r\n        return this._getOption('location');\r\n    }\r\n    set location(value: any) {\r\n        this._setOption('location', value);\r\n    }\r\n\r\n    @Input()\r\n    get options() {\r\n        return this._getOption('options');\r\n    }\r\n    set options(value: any) {\r\n        this._setOption('options', value);\r\n    }\r\n\r\n    @Input()\r\n    get template() {\r\n        return this._getOption('template');\r\n    }\r\n    set template(value: any) {\r\n        this._setOption('template', value);\r\n    }\r\n\r\n    @Input()\r\n    get text() {\r\n        return this._getOption('text');\r\n    }\r\n    set text(value: any) {\r\n        this._setOption('text', value);\r\n    }\r\n\r\n    @Input()\r\n    get toolbar() {\r\n        return this._getOption('toolbar');\r\n    }\r\n    set toolbar(value: any) {\r\n        this._setOption('toolbar', value);\r\n    }\r\n\r\n    @Input()\r\n    get visible() {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: any) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n    @Input()\r\n    get widget() {\r\n        return this._getOption('widget');\r\n    }\r\n    set widget(value: any) {\r\n        this._setOption('widget', value);\r\n    }\r\n\r\n    protected get _optionPath() {\r\n        return 'toolbarItems';\r\n    }\r\n\r\n\r\n\r\n    constructor(@SkipSelf() @Host() parentOptionHost: NestedOptionHost, @Host() optionHost: NestedOptionHost, private element: ElementRef) {\r\n        super();\r\n        parentOptionHost.setNestedOption(this);\r\n        optionHost.setHost(this, this._fullOptionPath.bind(this));\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        extractTemplate(this, this.element);\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DxiToolbarItemComponent\r\n  ],\r\n  exports: [\r\n    DxiToolbarItemComponent\r\n  ],\r\n})\r\nexport class DxiToolbarItemModule { }\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}