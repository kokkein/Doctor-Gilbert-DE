"use strict";
/*!
 * devextreme-angular
 * Version: 17.1.5
 * Build date: Wed Aug 02 2017
 *
 * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var nested_option_1 = require("../../core/nested-option");
var nested_option_2 = require("../../core/nested-option");
var DxoLabelComponent = (function (_super) {
    __extends(DxoLabelComponent, _super);
    function DxoLabelComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoLabelComponent.prototype, "connectorColor", {
        get: function () {
            return this._getOption('connectorColor');
        },
        set: function (value) {
            this._setOption('connectorColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "connectorWidth", {
        get: function () {
            return this._getOption('connectorWidth');
        },
        set: function (value) {
            this._setOption('connectorWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "customizeText", {
        get: function () {
            return this._getOption('customizeText');
        },
        set: function (value) {
            this._setOption('customizeText', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "font", {
        get: function () {
            return this._getOption('font');
        },
        set: function (value) {
            this._setOption('font', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "format", {
        get: function () {
            return this._getOption('format');
        },
        set: function (value) {
            this._setOption('format', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "indent", {
        get: function () {
            return this._getOption('indent');
        },
        set: function (value) {
            this._setOption('indent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "precision", {
        get: function () {
            return this._getOption('precision');
        },
        set: function (value) {
            this._setOption('precision', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "visible", {
        get: function () {
            return this._getOption('visible');
        },
        set: function (value) {
            this._setOption('visible', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "horizontalAlignment", {
        get: function () {
            return this._getOption('horizontalAlignment');
        },
        set: function (value) {
            this._setOption('horizontalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "position", {
        get: function () {
            return this._getOption('position');
        },
        set: function (value) {
            this._setOption('position', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "verticalAlignment", {
        get: function () {
            return this._getOption('verticalAlignment');
        },
        set: function (value) {
            this._setOption('verticalAlignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "alignment", {
        get: function () {
            return this._getOption('alignment');
        },
        set: function (value) {
            this._setOption('alignment', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "customizeHint", {
        get: function () {
            return this._getOption('customizeHint');
        },
        set: function (value) {
            this._setOption('customizeHint', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "displayMode", {
        get: function () {
            return this._getOption('displayMode');
        },
        set: function (value) {
            this._setOption('displayMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "indentFromAxis", {
        get: function () {
            return this._getOption('indentFromAxis');
        },
        set: function (value) {
            this._setOption('indentFromAxis', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "overlappingBehavior", {
        get: function () {
            return this._getOption('overlappingBehavior');
        },
        set: function (value) {
            this._setOption('overlappingBehavior', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "rotationAngle", {
        get: function () {
            return this._getOption('rotationAngle');
        },
        set: function (value) {
            this._setOption('rotationAngle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "staggeringSpacing", {
        get: function () {
            return this._getOption('staggeringSpacing');
        },
        set: function (value) {
            this._setOption('staggeringSpacing', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "argumentFormat", {
        get: function () {
            return this._getOption('argumentFormat');
        },
        set: function (value) {
            this._setOption('argumentFormat', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "argumentPrecision", {
        get: function () {
            return this._getOption('argumentPrecision');
        },
        set: function (value) {
            this._setOption('argumentPrecision', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "backgroundColor", {
        get: function () {
            return this._getOption('backgroundColor');
        },
        set: function (value) {
            this._setOption('backgroundColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "connector", {
        get: function () {
            return this._getOption('connector');
        },
        set: function (value) {
            this._setOption('connector', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "horizontalOffset", {
        get: function () {
            return this._getOption('horizontalOffset');
        },
        set: function (value) {
            this._setOption('horizontalOffset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "percentPrecision", {
        get: function () {
            return this._getOption('percentPrecision');
        },
        set: function (value) {
            this._setOption('percentPrecision', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "showForZeroValues", {
        get: function () {
            return this._getOption('showForZeroValues');
        },
        set: function (value) {
            this._setOption('showForZeroValues', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "verticalOffset", {
        get: function () {
            return this._getOption('verticalOffset');
        },
        set: function (value) {
            this._setOption('verticalOffset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "hideFirstOrLast", {
        get: function () {
            return this._getOption('hideFirstOrLast');
        },
        set: function (value) {
            this._setOption('hideFirstOrLast', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "indentFromTick", {
        get: function () {
            return this._getOption('indentFromTick');
        },
        set: function (value) {
            this._setOption('indentFromTick', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "useRangeColors", {
        get: function () {
            return this._getOption('useRangeColors');
        },
        set: function (value) {
            this._setOption('useRangeColors', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "location", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this._setOption('location', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "showColon", {
        get: function () {
            return this._getOption('showColon');
        },
        set: function (value) {
            this._setOption('showColon', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "radialOffset", {
        get: function () {
            return this._getOption('radialOffset');
        },
        set: function (value) {
            this._setOption('radialOffset', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "topIndent", {
        get: function () {
            return this._getOption('topIndent');
        },
        set: function (value) {
            this._setOption('topIndent', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "dataField", {
        get: function () {
            return this._getOption('dataField');
        },
        set: function (value) {
            this._setOption('dataField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLabelComponent.prototype, "_optionPath", {
        get: function () {
            return 'label';
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "connectorColor", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "connectorWidth", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "customizeText", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "font", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "format", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "indent", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "precision", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "visible", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "horizontalAlignment", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "position", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "text", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "verticalAlignment", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "alignment", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "customizeHint", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "displayMode", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "indentFromAxis", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "overlappingBehavior", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "rotationAngle", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "staggeringSpacing", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "argumentFormat", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "argumentPrecision", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "backgroundColor", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "border", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "connector", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "horizontalOffset", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "percentPrecision", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "showForZeroValues", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "verticalOffset", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "hideFirstOrLast", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "indentFromTick", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "useRangeColors", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "location", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "showColon", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "radialOffset", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "topIndent", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "dataField", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxoLabelComponent.prototype, "enabled", null);
    DxoLabelComponent = __decorate([
        core_1.Component({
            selector: 'dxo-label',
            template: '',
            styles: [''],
            providers: [nested_option_1.NestedOptionHost]
        }),
        __param(0, core_1.SkipSelf()), __param(0, core_1.Host()), __param(1, core_1.Host()),
        __metadata("design:paramtypes", [nested_option_1.NestedOptionHost, nested_option_1.NestedOptionHost])
    ], DxoLabelComponent);
    return DxoLabelComponent;
}(nested_option_2.NestedOption));
exports.DxoLabelComponent = DxoLabelComponent;
var DxoLabelModule = (function () {
    function DxoLabelModule() {
    }
    DxoLabelModule = __decorate([
        core_1.NgModule({
            declarations: [
                DxoLabelComponent
            ],
            exports: [
                DxoLabelComponent
            ],
        })
    ], DxoLabelModule);
    return DxoLabelModule;
}());
exports.DxoLabelModule = DxoLabelModule;
//# sourceMappingURL=label.js.map