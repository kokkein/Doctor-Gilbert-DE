"use strict";
/*!
 * devextreme-angular
 * Version: 17.1.5
 * Build date: Wed Aug 02 2017
 *
 * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var nested_option_1 = require("../../core/nested-option");
var nested_option_2 = require("../../core/nested-option");
var DxiLayerComponent = (function (_super) {
    __extends(DxiLayerComponent, _super);
    function DxiLayerComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiLayerComponent.prototype, "borderColor", {
        get: function () {
            return this._getOption('borderColor');
        },
        set: function (value) {
            this._setOption('borderColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "borderWidth", {
        get: function () {
            return this._getOption('borderWidth');
        },
        set: function (value) {
            this._setOption('borderWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "colorGroupingField", {
        get: function () {
            return this._getOption('colorGroupingField');
        },
        set: function (value) {
            this._setOption('colorGroupingField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "colorGroups", {
        get: function () {
            return this._getOption('colorGroups');
        },
        set: function (value) {
            this._setOption('colorGroups', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "customize", {
        get: function () {
            return this._getOption('customize');
        },
        set: function (value) {
            this._setOption('customize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "data", {
        get: function () {
            return this._getOption('data');
        },
        set: function (value) {
            this._setOption('data', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "dataField", {
        get: function () {
            return this._getOption('dataField');
        },
        set: function (value) {
            this._setOption('dataField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "elementType", {
        get: function () {
            return this._getOption('elementType');
        },
        set: function (value) {
            this._setOption('elementType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "hoveredBorderColor", {
        get: function () {
            return this._getOption('hoveredBorderColor');
        },
        set: function (value) {
            this._setOption('hoveredBorderColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "hoveredBorderWidth", {
        get: function () {
            return this._getOption('hoveredBorderWidth');
        },
        set: function (value) {
            this._setOption('hoveredBorderWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "hoveredColor", {
        get: function () {
            return this._getOption('hoveredColor');
        },
        set: function (value) {
            this._setOption('hoveredColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "hoverEnabled", {
        get: function () {
            return this._getOption('hoverEnabled');
        },
        set: function (value) {
            this._setOption('hoverEnabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "maxSize", {
        get: function () {
            return this._getOption('maxSize');
        },
        set: function (value) {
            this._setOption('maxSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "minSize", {
        get: function () {
            return this._getOption('minSize');
        },
        set: function (value) {
            this._setOption('minSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "name", {
        get: function () {
            return this._getOption('name');
        },
        set: function (value) {
            this._setOption('name', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "palette", {
        get: function () {
            return this._getOption('palette');
        },
        set: function (value) {
            this._setOption('palette', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "paletteSize", {
        get: function () {
            return this._getOption('paletteSize');
        },
        set: function (value) {
            this._setOption('paletteSize', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "selectedBorderColor", {
        get: function () {
            return this._getOption('selectedBorderColor');
        },
        set: function (value) {
            this._setOption('selectedBorderColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "selectedBorderWidth", {
        get: function () {
            return this._getOption('selectedBorderWidth');
        },
        set: function (value) {
            this._setOption('selectedBorderWidth', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "selectedColor", {
        get: function () {
            return this._getOption('selectedColor');
        },
        set: function (value) {
            this._setOption('selectedColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "selectionMode", {
        get: function () {
            return this._getOption('selectionMode');
        },
        set: function (value) {
            this._setOption('selectionMode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "size", {
        get: function () {
            return this._getOption('size');
        },
        set: function (value) {
            this._setOption('size', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "sizeGroupingField", {
        get: function () {
            return this._getOption('sizeGroupingField');
        },
        set: function (value) {
            this._setOption('sizeGroupingField', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "sizeGroups", {
        get: function () {
            return this._getOption('sizeGroups');
        },
        set: function (value) {
            this._setOption('sizeGroups', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiLayerComponent.prototype, "_optionPath", {
        get: function () {
            return 'layers';
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "borderColor", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "borderWidth", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "color", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "colorGroupingField", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "colorGroups", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "customize", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "data", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "dataField", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "dataSource", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "elementType", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "hoveredBorderColor", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "hoveredBorderWidth", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "hoveredColor", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "hoverEnabled", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "label", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "maxSize", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "minSize", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "name", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "opacity", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "palette", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "paletteSize", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "selectedBorderColor", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "selectedBorderWidth", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "selectedColor", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "selectionMode", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "size", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "sizeGroupingField", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "sizeGroups", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiLayerComponent.prototype, "type", null);
    DxiLayerComponent = __decorate([
        core_1.Component({
            selector: 'dxi-layer',
            template: '',
            styles: [''],
            providers: [nested_option_1.NestedOptionHost]
        }),
        __param(0, core_1.SkipSelf()), __param(0, core_1.Host()), __param(1, core_1.Host()),
        __metadata("design:paramtypes", [nested_option_1.NestedOptionHost, nested_option_1.NestedOptionHost])
    ], DxiLayerComponent);
    return DxiLayerComponent;
}(nested_option_2.CollectionNestedOption));
exports.DxiLayerComponent = DxiLayerComponent;
var DxiLayerModule = (function () {
    function DxiLayerModule() {
    }
    DxiLayerModule = __decorate([
        core_1.NgModule({
            declarations: [
                DxiLayerComponent
            ],
            exports: [
                DxiLayerComponent
            ],
        })
    ], DxiLayerModule);
    return DxiLayerModule;
}());
exports.DxiLayerModule = DxiLayerModule;
//# sourceMappingURL=layer-dxi.js.map