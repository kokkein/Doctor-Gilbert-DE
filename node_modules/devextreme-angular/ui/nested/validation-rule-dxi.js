"use strict";
/*!
 * devextreme-angular
 * Version: 17.1.5
 * Build date: Wed Aug 02 2017
 *
 * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var nested_option_1 = require("../../core/nested-option");
var nested_option_2 = require("../../core/nested-option");
var DxiValidationRuleComponent = (function (_super) {
    __extends(DxiValidationRuleComponent, _super);
    function DxiValidationRuleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiValidationRuleComponent.prototype, "comparisonTarget", {
        get: function () {
            return this._getOption('comparisonTarget');
        },
        set: function (value) {
            this._setOption('comparisonTarget', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "comparisonType", {
        get: function () {
            return this._getOption('comparisonType');
        },
        set: function (value) {
            this._setOption('comparisonType', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "message", {
        get: function () {
            return this._getOption('message');
        },
        set: function (value) {
            this._setOption('message', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "reevaluate", {
        get: function () {
            return this._getOption('reevaluate');
        },
        set: function (value) {
            this._setOption('reevaluate', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "type", {
        get: function () {
            return this._getOption('type');
        },
        set: function (value) {
            this._setOption('type', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "validationCallback", {
        get: function () {
            return this._getOption('validationCallback');
        },
        set: function (value) {
            this._setOption('validationCallback', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "pattern", {
        get: function () {
            return this._getOption('pattern');
        },
        set: function (value) {
            this._setOption('pattern', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "max", {
        get: function () {
            return this._getOption('max');
        },
        set: function (value) {
            this._setOption('max', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "min", {
        get: function () {
            return this._getOption('min');
        },
        set: function (value) {
            this._setOption('min', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "trim", {
        get: function () {
            return this._getOption('trim');
        },
        set: function (value) {
            this._setOption('trim', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiValidationRuleComponent.prototype, "_optionPath", {
        get: function () {
            return 'validationRules';
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "comparisonTarget", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "comparisonType", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "message", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "reevaluate", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "type", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "validationCallback", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "pattern", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "max", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "min", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], DxiValidationRuleComponent.prototype, "trim", null);
    DxiValidationRuleComponent = __decorate([
        core_1.Component({
            selector: 'dxi-validation-rule',
            template: '',
            styles: [''],
            providers: [nested_option_1.NestedOptionHost]
        }),
        __param(0, core_1.SkipSelf()), __param(0, core_1.Host()), __param(1, core_1.Host()),
        __metadata("design:paramtypes", [nested_option_1.NestedOptionHost, nested_option_1.NestedOptionHost])
    ], DxiValidationRuleComponent);
    return DxiValidationRuleComponent;
}(nested_option_2.CollectionNestedOption));
exports.DxiValidationRuleComponent = DxiValidationRuleComponent;
var DxiValidationRuleModule = (function () {
    function DxiValidationRuleModule() {
    }
    DxiValidationRuleModule = __decorate([
        core_1.NgModule({
            declarations: [
                DxiValidationRuleComponent
            ],
            exports: [
                DxiValidationRuleComponent
            ],
        })
    ], DxiValidationRuleModule);
    return DxiValidationRuleModule;
}());
exports.DxiValidationRuleModule = DxiValidationRuleModule;
//# sourceMappingURL=validation-rule-dxi.js.map